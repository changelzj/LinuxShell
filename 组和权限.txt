文件
	所有者：一般是创建者
	所在组：一般是所有者所在组，但不一定
	其他组：
	
ls -ahl ：查看文件所有者



改变文件所有者：

chown 用户名 文件名 （只能改变文件所有者，不能改变所在组）

chown -R 用户名 文件名 （递归目录修改，包括内含的多层目录）



chown 所有者:所在组 文件目录 （所有者所在组一起改变）

chown 所有者:所在组 文件目录 （所有者所在组一起改变）




改变文件和目录所在组：chgrp  组名 文件名
改变文件和目录所在组(递归子目录)：chgrp -R  组名 文件名

改变用户所在组：usermod -g 新组名 用户名





文件的描述：

d rwx r-x r-x . 4 tom  police 4.0K 2月  17 08:19 .mozilla
d rwx r-x r-x .   4 root root  4096 2月  17 18:58 opt


1标识 
2第一组三个：所有者权限    
3第二组三个：所在组的用户的权限，即与文件所有者同一组的用户的权限
4第三组三个：文件其他组拥有的权限，即不与文件所有者同一组的用户的权限
5 . 
6数字：文件为硬链接个数一般为1，目录为目录下子目录个数（含隐藏）
7文件所有者
8文件所在组
9文件大小 字节，如果目录显示为4096（目录本身占用的空间4096）
10最后修改时间
11名



标识：
	- 文件
	d 目录
	l 软连接
	c 字符设备（键鼠）
	b 块文件 (硬盘)
	
	
	
	
权限：

	文件：
		r 读，查看
		w 写，但不代表可以删除，能删除的条件是对该文件所在目录有写权限
		- 无
		x 执行
	目录：
		r 可读取，查看列表
		w 目录内创建 删除 重命名目录
		x 可以进入

数字的表示：r=4 w=2 x=1 


权限管理：
	
	chmod 修改文件或目录的权限
	
	1. rwx + - = 
	
		u 所有者
		g 所在组 
		o 其他人 
		a 所有人
		
		授权： chmod u=rwx,g=rx,o=x 文件或目录名
		
		
		增加一个权限： chmod o+w 文件或目录名
		
		
		减去一个权限： chmod o-w 文件或目录名
		
		
		chmod u=rwx,g=rx,o=x ok.java

		chmod u-x,g+w ok.java


	2. 数字方式的授权
	
		rwx r-x r-x
		7	5	5
	
		chmod 755 ok.java
		
		
		